1
00:00:00,000 --> 00:00:05,520
Hi, Hooman's here and welcome to another episode of Fast Tech Skills. In this video, we're going to

2
00:00:05,520 --> 00:00:12,880
have a look at distributed systems. This is a very important approach to the modern computing

3
00:00:12,880 --> 00:00:18,160
and I'm going to explain in a second why it's critical to the modern web and the services that

4
00:00:18,160 --> 00:00:25,520
we use on a day-to-day basis. So if you've ever used Facebook or Google or any of these services,


1
00:00:00,000 --> 00:00:06,000
services, you probably know that these are very, very big services.

2
00:00:06,000 --> 00:00:09,200
They are like very large scale services.

3
00:00:09,200 --> 00:00:13,360
And these services get a lot of requests all over the world.

4
00:00:13,360 --> 00:00:17,160
There are people who are trying to access these services.

5
00:00:17,160 --> 00:00:20,880
So there is one big problem.

6
<<<<<<< HEAD
<<<<<<< HEAD
00:00:20,880 --> 00:00:32,440
If you want to serve that many people at the same time with one service, you have to have

7
00:00:32,440 --> 00:00:35,440
a lot of people.
=======
00:00:20,880 --> 00:00:36,920
=======
00:00:20,880 --> 00:00:32,360
>>>>>>> 3fdf5293c2355778c59c7828ea20723a5e50f810
If you want to serve that many people at the same time with one service, you have to have
>>>>>>> ab60e48f4b9431d2d281699e39ce908772c61b38

7
00:00:32,360 --> 00:00:35,360
a lot of people.


1
00:00:00,000 --> 00:00:06,520
one machine then it's basically impossible. We cannot build a computer that can serve

2
00:00:06,520 --> 00:00:13,520
everyone at the same time. So if we actually consider for example these services isolated

3
00:00:15,160 --> 00:00:22,160
on the internet and we get lots of requests coming in like this. This could be like millions

4
<<<<<<< HEAD
00:00:22,160 --> 00:00:25,240
and millions of requests
=======
00:00:22,160 --> 00:00:29,160
<<<<<<< HEAD
and millions of requests or millions of requests over the internet but a smartphone a desktop
>>>>>>> ab60e48f4b9431d2d281699e39ce908772c61b38
=======
and millions of requests, millions and millions of requests.
>>>>>>> 3fdf5293c2355778c59c7828ea20723a5e50f810


1
00:00:00,000 --> 00:00:06,840
per day even sometimes billions who knows. So the problem is that if you want

2
00:00:06,840 --> 00:00:10,560
to build a computer that can fulfill all these services then there are major

3
00:00:10,560 --> 00:00:17,720
issues. First there is no computer that can handle all those requests even if we

4
00:00:17,720 --> 00:00:21,640
want to build a custom computer that would be a custom solution to this

5
00:00:21,640 --> 00:00:27,240
problem and the other...


1
00:00:00,000 --> 00:00:05,700
massive issue with this approach would be that when the number of requests increase

2
00:00:06,020 --> 00:00:09,520
Then we need to build another computer. It's not scalable

3
00:00:10,120 --> 00:00:15,080
So the idea of distributed systems is that we distribute the load

4
00:00:15,640 --> 00:00:18,840
for example the number of requests that we get on

5
00:00:18,840 --> 00:00:25,360
Interconnected as separate computers that talk to each other


1
00:00:00,000 --> 00:00:05,000
each other and run the applications together. So they're computers on a

2
00:00:05,000 --> 00:00:10,640
network on an internal network connected to each other and they handle different

3
00:00:10,640 --> 00:00:17,360
portions of the load. So this way we can simply scale up if we get more and more

4
00:00:17,360 --> 00:00:31,360
requests then we can simply add more computers to our distributed system.


1
00:00:00,000 --> 00:00:06,240
there is another massive advantage to this approach is that let's say that we

2
00:00:06,240 --> 00:00:11,480
have one of these services running and it gets a lot of requests suddenly one

3
00:00:11,480 --> 00:00:17,720
of these computers stops working what's gonna happen is all these other ones

4
00:00:17,720 --> 00:00:23,140
automatically will find out that this computer is not active anymore so they

5
<<<<<<< HEAD
<<<<<<< HEAD
00:00:23,140 --> 00:00:30,140
handle that bank
=======
00:00:23,140 --> 00:00:32,820
handle that particular request
>>>>>>> ab60e48f4b9431d2d281699e39ce908772c61b38
=======
00:00:23,140 --> 00:00:27,580
handle that the computer
>>>>>>> 3fdf5293c2355778c59c7828ea20723a5e50f810


1
00:00:00,000 --> 00:00:05,160
specific machines workload and the application is kind of running on all of

2
00:00:05,160 --> 00:00:10,840
them in a virtual machine so that is a massive advantage when it comes to

3
00:00:10,840 --> 00:00:16,600
scalability and building applications that can fulfill millions and millions

4
00:00:16,600 --> 00:00:23,680
of users at the same time so distributed systems is a very very important approach

5
00:00:23,680 --> 00:00:30,200
to the modern computer.


1
00:00:00,000 --> 00:00:08,400
and as you can see it allows us to scale up and it's reliable

2
00:00:08,400 --> 00:00:16,540
and it's an approach that actually makes sense and it's visible so as you can see

3
00:00:16,540 --> 00:00:22,640
distributed systems is a very exciting approach to the modern computing.

4
00:00:22,640 --> 00:00:30,440
If you enjoyed this video check out this other video


1
00:00:00,000 --> 00:00:06,540
video that I made and it's full of awesome content that you can learn in no

2
00:00:06,540 --> 00:00:12,020
time as you did with this video. Also if you think that you like my videos then

3
00:00:12,020 --> 00:00:17,980
simply subscribe to my channel I'm sure you're gonna love the videos that I

4
00:00:17,980 --> 00:00:24,020
publish if you like this one already and I'll be seeing you in the next video

5
00:00:24,020 --> 00:00:32,020
thanks


1
00:00:00,000 --> 00:00:04,400
watching, Hooman's here, and have a good day!


